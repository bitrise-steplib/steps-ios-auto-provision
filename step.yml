title: iOS Auto Provision
summary: Automatically manages your iOS Provisioning Profiles for your Xcode project
description: |-
  ### Automatically manages your iOS Provisioning Profiles for your Xcode project.

  __Setup guide__: [Managing iOS code signing files - automatic provisioning](https://devcenter.bitrise.io/code-signing/ios-code-signing/ios-auto-provisioning/)

  How does it work?

  - ensures that the __Application Identifier__ exists on the Apple Developer Portal
  - ensures that the __project's Capabilities__ are set correctly in the Application Identifier
  - ensures that the __Provisioning Profiles__ exist on the Apple Developer Portal and are installed for the build
  - ensure that all the available __Test Devices__ exist on the Apple Developer Portal and are included in the Provisioning Profiles
  - installs the provided __Codesigning Certificates__ into the Keychain
website: https://github.com/bitrise-steplib/steps-ios-auto-provision
source_code_url: https://github.com/bitrise-steplib/steps-ios-auto-provision
support_url: https://github.com/bitrise-steplib/steps-ios-auto-provision/issues

project_type_tags:
  - ios

type_tags:
  - code-sign

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ".IsCI"

toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-ios-auto-provision

inputs:
  - key_id:
    opts:
      title: Key id
      description: "Your private key ID from App Store Connect (Ex: 2X9R4HXF34)."
      is_required: true
      is_sensitive: true
  - issuer_id:
    opts:
      title: Issuer ID
      description: "Your issuer ID from the API Keys page in App Store Connect (Ex: 57246542-96fe-1a63-e053-0824d011072a)."
      is_required: true
      is_sensitive: true
  - private_key:
    opts:
      title: Private Key URL
      description: |-
        URL of the API Key for App Store Connect API.

        For remote API Key provide remote URL (ex: `https://URL/TO/AuthKey_ASDF.p8`).  
        For local API Key provide local file path URL (ex: `file://PATH/TO/AuthKey_ASDF.p8`).
      is_required: true
  - devices:
    opts:
      title: Devices
      description: Comma separated list of iOS device UDIDs to be included in the managed Profiles.
  - distribution_type: development
    opts:
      title: Distribution type
      description: Describes how Xcode should sign your project.
      value_options:
        - "development"
        - "app-store"
        - "ad-hoc"
        - "enterprise"
      is_required: true
  - devices:
    opts:
      title: Devices
      description: Comma separated list of iOS device UDIDs to be included in the managed Profiles.
  - project_path: $BITRISE_PROJECT_PATH
    opts:
      title: Xcode Project (or Workspace) path
      description: A `.xcodeproj` or `.xcworkspace` path.
      is_required: true
  - scheme: $BITRISE_SCHEME
    opts:
      title: Scheme name
      description: The Xcode Scheme to use.
      is_required: true
  - configuration:
    opts:
      title: Configuration name
      description: |-
        The Xcode Configuration to use.

        By default your Scheme defines which Configuration (Debug, Release, ...) should be used,
        but you can overwrite it with this option.
  - min_profile_days_valid: 0
    opts:
      title: The minimum days the Provisioning Profile should be valid
      description: |-
        Sometimes you want to sign an app with a Provisioning Profile that is valid for at least 'x' days.

        For example, an enterprise app won't open if your Provisioning Profile is expired. With this parameter, you can have a Provisioning Profile that's at least valid for 'x' days.

        By default (0) it just renews the Provisioning Profile when expired.
      is_required: false
  - verbose_log: "no"
    opts:
      category: Debug
      title: Enable verbose logging?
      description: Enable verbose logging?
      is_required: true
      value_options:
        - "yes"
        - "no"
  - certificate_urls: $BITRISE_CERTIFICATE_URL
    opts:
      category: Debug
      title: Certificate URL
      description: |
        URLs of the certificates to download.

        Multiple URLs can be specified, separated by a pipe (`|`) character,
        you can specify a local path as well, using the `file://` scheme.

        __Provide a development certificate__ url, to ensure development code signing files for the project and __also provide a distribution certificate__ url, to ensure distribution code signing files for your project.

        __Example:__ `file://./development/certificate/path|https://distribution/certificate/url`
      is_required: true
      is_sensitive: true
  - passphrases: $BITRISE_CERTIFICATE_PASSPHRASE
    opts:
      category: Debug
      title: Certificate passphrase
      description: |
        Certificate passphrases.

        Multiple passphrases can be specified, separated by a pipe (`|`) character.

        __Specified certificate passphrase count should match the count of the certificate urls.__

        __Example__ (1 certificate with empty passphrase, 1 certificate with non-empty passphrase): `|distribution-passphrase`
      is_required: true
      is_sensitive: true
  - keychain_path: $HOME/Library/Keychains/login.keychain
    opts:
      category: Debug
      title: Keychain path
      description: The Keychain path.
      is_required: true
  - keychain_password: $BITRISE_KEYCHAIN_PASSWORD
    opts:
      category: Debug
      title: Keychain's password
      description: The Keychain's password.
      is_required: true
      is_sensitive: true
outputs:
  - BITRISE_EXPORT_METHOD:
    opts:
      title: "The selected distribution type"
      description: |-
        The selected distribution type.

        One of: `development`, `app-store`, `ad-hoc` or `enterprise`
  - BITRISE_DEVELOPER_TEAM:
    opts:
      title: "The development team's ID"
      description: |-
        The development team's ID.

        Example: `1MZX23ABCD4`
  - BITRISE_DEVELOPMENT_CODESIGN_IDENTITY:
    opts:
      title: "The development codesign identity's name"
      description: |-
        The development codesign identity's name.

        Example: `iPhone Developer: Bitrise Bot (VV2J4SV8V4)`
  - BITRISE_PRODUCTION_CODESIGN_IDENTITY:
    opts:
      title: "The production codesign identity's name"
    opts:
      title: "The production codesign identity's name"
      description: |-
        The production codesign identity's name.

        Example: `iPhone Distribution: Bitrise Bot (VV2J4SV8V4)`
  - BITRISE_DEVELOPMENT_PROFILE:
    opts:
      title: "The main target's development provisioning profile's UUID"
      description: |-
        The main target's development provisioning profile's UUID.

        Example: `c5be4123-1234-4f9d-9843-0d9be985a068`
  - BITRISE_PRODUCTION_PROFILE:
    opts:
      title: "The main target's production provisioning profile's UUID"
      description: |-
        The main target's production provisioning profile's UUID.

        Example: `c5be4123-1234-4f9d-9843-0d9be985a068`
