format_version: 3
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # If you want to share this step into a StepLib
  - BITRISE_STEP_ID: ios-auto-provision
  - BITRISE_STEP_VERSION: "1.0.3"
  - BITRISE_STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/steps-ios-auto-provision.git
  - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL

  # An example secret param, define it (A_SECRET_PARAM) in .bitrise.secrets.yml
  - BITRISE_BUILD_URL: $BITRISE_BUILD_URL
  - BITRISE_BUILD_API_TOKEN: $BITRISE_BUILD_API_TOKEN
  - BITRISE_CERTIFICATE_URL: $BITRISE_CERTIFICATE_URL
  - BITRISE_CERTIFICATE_PASSPHRASE: $BITRISE_CERTIFICATE_PASSPHRASE
  - TEAM_ID: $TEAM_ID
  - BITRISE_KEYCHAIN_PASSWORD: $BITRISE_KEYCHAIN_PASSWORD

  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  test:
    before_run:
    - audit-this-step
    steps:
    - script:
        title: bundle install
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            bundle install
    - script:
        title: rubocop
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            bundle exec rubocop
    - script:
        title: rspec
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            bundle exec rspec
    after_run:
    - test_bundle_id
    - test_xcode_managed
    - test_entitlements
    - test_workspace

  test_bundle_id:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-simple-objc.git
    - BRANCH: bundle_id
    - BITRISE_PROJECT_PATH: ios-simple-objc/ios-simple-objc.xcodeproj
    - BITRISE_SCHEME: ios-simple-objc
    - BITRISE_CONFIGURATION: Release
    - DISTRIBUTION_TYPE: development
    after_run:
    - _common

  test_xcode_managed:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-multi-target.git
    - BRANCH: automatic
    - BITRISE_PROJECT_PATH: code-sign-test.xcodeproj
    - BITRISE_SCHEME: code-sign-test
    - BITRISE_CONFIGURATION: 
    - DISTRIBUTION_TYPE: app-store
    after_run:
    - _common

  test_entitlements:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-ios-multi-target.git
    - BRANCH: entitlements
    - BITRISE_PROJECT_PATH: code-sign-test.xcodeproj
    - BITRISE_SCHEME: code-sign-test
    - BITRISE_CONFIGURATION: 
    - DISTRIBUTION_TYPE: app-store
    after_run:
    - _common

  test_workspace:
    envs:
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/ios-cocoapods-minimal-sample.git
    - BRANCH: pod
    - BITRISE_PROJECT_PATH: iOSMinimalCocoaPodsSample/iOSMinimalCocoaPodsSample.xcworkspace
    - BITRISE_SCHEME: iOSMinimalCocoaPodsSample
    - BITRISE_CONFIGURATION: 
    - INSTALL_PODS: "true"
    - DISTRIBUTION_TYPE: app-store
    after_run:
    - _common

  _common:
    steps:
    - script:
        title: Cleanup _tmp dir
        inputs:
        - content: |-
            #!/bin/bash
            set -ev
            rm -rf "$ORIG_BITRISE_SOURCE_DIR/_tmp"
            mkdir -p "$ORIG_BITRISE_SOURCE_DIR/_tmp"
    - change-workdir:
        title: Switch working dir to _tmp
        inputs:
        - path: $ORIG_BITRISE_SOURCE_DIR/_tmp
        - is_create_path: "true"
    - script:
        title: Cleanup _tmp dir
        inputs:
        - content: |-
            #!/bin/bash
            git clone -b $BRANCH $SAMPLE_APP_URL .
    - cocoapods-install:
        run_if: '{{enveq "INSTALL_PODS" "true"}}'
        title: CocoaPods install
    - path::./:
        title: Step Test
        run_if: true
        inputs:
        - build_url: $BITRISE_BUILD_URL
        - build_api_token: $BITRISE_BUILD_API_TOKEN
        - certificate_urls: $BITRISE_CERTIFICATE_URL
        - passphrases: $BITRISE_CERTIFICATE_PASSPHRASE
        - team_id: $TEAM_ID
        - distribution_type: $DISTRIBUTION_TYPE
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - configuration: $BITRISE_CONFIGURATION
        - verbose_log: "yes"
        - generate_profiles: "yes"
    - xcode-archive:
        title: Xcode archive
        inputs:
        - export_method: $DISTRIBUTION_TYPE
        - project_path: $BITRISE_PROJECT_PATH
        - scheme: $BITRISE_SCHEME
        - configuration: $BITRISE_CONFIGURATION
        - output_tool: xcodebuild
    - deploy-to-bitrise-io:
        inputs:
        - notify_user_groups: none

  # ----------------------------------------------------------------
  # --- workflows to create Release
  create-release:
    steps:
    - script:
        title:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u github.com/bitrise-tools/releaseman
            export CI=true
            releaseman create --version $BITRISE_STEP_VERSION
    
  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - BITRISE_STEP_ID: $BITRISE_STEP_ID
      - BITRISE_STEP_VERSION: $BITRISE_STEP_VERSION
      - BITRISE_STEP_GIT_CLONE_URL: $BITRISE_STEP_GIT_CLONE_URL
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `BITRISE_STEP_ID` and `BITRISE_STEP_VERSION`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c "${MY_STEPLIB_REPO_FORK_GIT_URL}"
            bitrise share create --stepid "${BITRISE_STEP_ID}" --tag "${BITRISE_STEP_VERSION}" --git "${BITRISE_STEP_GIT_CLONE_URL}"
            bitrise share finish
